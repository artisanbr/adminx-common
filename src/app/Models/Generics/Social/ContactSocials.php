<?php
namespace ArtisanBR\Adminx\Common\App\Models\Generics\Social;

use ArtisanBR\Adminx\Common\App\Enums\SocialLinkType;
use ArtisanBR\Adminx\Common\App\Models\Casts\AsCollectionOf;
use ArtisanLabs\GModel\GenericModel;
use Illuminate\Support\Collection;

/**
 * @property Collection|SocialNetwork[] $list
 */
class ContactSocials extends GenericModel
{

    protected $fillable = [
        'list',
    ];

    protected $attributes = [
        'list' => [],
    ];

    protected $casts = [
        'list' => AsCollectionOf::class.':'.SocialNetwork::class,
        'icon_list_items_html' => 'string',
    ];

    protected $appends = [
        'icon_list_items_html',
        'icon_list_html',
        'complete_list_items_html',
        'complete_list_html',
        'facebook',
        'instagram',
        'linkedin',
    ];

    //region ATTRIBUTES

    //region GETS
    protected function getFacebookAttribute(){
        return $this->list->firstWhere('type', SocialLinkType::Facebook)->uri ?? null;
    }
    protected function getInstagramAttribute(){
        return $this->list->firstWhere('type', SocialLinkType::Instagram)->uri ?? null;
    }
    protected function getLinkedinAttribute(){
        return $this->list->firstWhere('type', SocialLinkType::Linkedin)->uri ?? null;
    }

    protected function getIconListItemsHtmlAttribute(){
        return $this->list->pluck('icon_link_html')->reduce(fn($carrie, $item) => $carrie."<li>{$item}</li>");
    }

    protected function getIconListHtmlAttribute(){
        return '<ul class="social-links">' . $this->list->pluck('icon_link_html')->reduce(fn($carrie, $item) => $carrie."<li>{$item}</li>") . '</ul>' ;
    }

    protected function getCompleteListItemsHtmlAttribute(){
        return $this->list->pluck('complete_link_html')->reduce(fn($carrie, $item) => $carrie."<li>{$item}</li>");
    }

    protected function getCompleteListHtmlAttribute(){
        return '<ul class="social-links">' . $this->list->pluck('complete_link_html')->reduce(fn($carrie, $item) => $carrie."<li>{$item}</li>") . '</ul>' ;
    }
    //endregion
    //endregion


    public function toArray(): array
    {
        return parent::toArray(); // TODO: Change the autogenerated stub
    }
}
