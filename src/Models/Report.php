<?php
/*
 * Copyright (c) 2025. Tanda Interativa - Todos os Direitos Reservados
 * Desenvolvido por Renalcio Carlos Jr.
 */

namespace Adminx\Common\Models;

use Adminx\Common\Enums\core\ReportType;
use Adminx\Common\Models\Bases\EloquentModelBase;
use Adminx\Common\Models\Interfaces\OwneredModel;
use Adminx\Common\Models\Interfaces\PublicIdModel;
use Adminx\Common\Models\Scopes\WhereSiteScope;
use Adminx\Common\Models\Traits\HasOwners;
use Adminx\Common\Models\Traits\HasPublicIdAttribute;
use Adminx\Common\Models\Traits\HasPublicIdUriAttributes;
use Adminx\Common\Models\Traits\HasSlugAttribute;
use Adminx\Common\Models\Traits\HasUriAttributes;
use Adminx\Common\Models\Traits\HasValidation;
use Adminx\Common\Models\Traits\Relations\BelongsToSite;
use Adminx\Common\Models\Traits\Relations\BelongsToUser;
use Adminx\Common\Models\Traits\Relations\Categorizable;
use Illuminate\Database\Eloquent\Builder;

class Report extends EloquentModelBase implements PublicIdModel, OwneredModel
{
    use HasUriAttributes, HasSlugAttribute, Categorizable, BelongsToSite, BelongsToUser, HasPublicIdAttribute, HasPublicIdUriAttributes, HasOwners, HasValidation;

    protected $fillable = [
        'site_id',
        'user_id',
        'account_id',
        'title',
        'slug',
        'type',
        'description',
        'content',
        'tags',
        'published_at',
    ];

    protected $casts = [
        'title'        => 'string',
        'slug'        => 'string',
        'type'           => ReportType::class,
        'description'       => 'string',
        'content'       => 'string',
        'tags'       => 'collection',
        'published_at'   => 'datetime:d/m/Y H:i:s',
    ];

    protected $appends = [
        'url',
    ];

    protected $attributes = [
        'type' => 'info',
    ];

    protected array $ownerTypes = ['user'];

    //region SCOPES


    //endregion

    //region OVERRIDES
    protected static function booted()
    {
        static::addGlobalScope(new WhereSiteScope);

        static::addGlobalScope('public', function (Builder $builder) {
            $builder->orWhere('site_id', null);
        });
    }

    public function save(array $options = [])
    {
        return parent::save($options); // TODO: Change the autogenerated stub
    }
    //endregion
}
